# i3 config file
# Yoann Fleury
# Any question about this configuration file ? Ask me to @yoannfleurydev on
# Twitter and I will answer with pleasure.

# Set the META key to be the modifier key.
set $MOD Mod4

# Here, I set another variable for i3wm to avoid writing $HOME/bin multiple
# times
set $HOME_BIN $HOME/bin

# -----------------------------------
# CUSTOM KEY MAPPING
# -----------------------------------

# Use modifier key and enter to open terminal. i3-sensible-terminal is a
# wrapper, if you set the $TERMINAL environment variable, it will open
# the defined terminal.
bindsym $MOD+Return exec i3-sensible-terminal

# This line will map [MOD Shift w] to a script that change the wallpaper
# and change the colorscheme based on it. Check pywal for more informations
bindsym $MOD+Shift+w exec "wal -i $HOME/Pictures/Wall -t"

# Use modifier key and Control and left or right to move the workspace on the
# left or the right screen output if there is at least two output
bindsym $MOD+Ctrl+Left exec "i3-msg move workspace to output left"
bindsym $MOD+Ctrl+Right exec "i3-msg move workspace to output right"

# SPOTIFY MAPPING {{{

bindsym Mod1+l exec "$HOME_BIN/sp next"
bindsym Mod1+h exec "$HOME_BIN/sp previous"
bindsym Mod1+k exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym Mod1+j exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym Mod1+space exec "$HOME_BIN/sp play"

# }}}

# Show rofi
bindsym $MOD+d exec rofi -show run
bindsym $MOD+w exec rofi -show window

# Lock the screen using a custom script that take a screenshot of the current
# display and then pixelise it to hide sensitive data. Check the script for
# more information
bindsym $MOD+Shift+g exec $HOME_BIN/lock

# -----------------------------------

# Use Mouse+$MOD to drag floating windows to their wanted position
floating_modifier $MOD

# kill focused window
bindsym $MOD+Shift+a kill

# change focus
bindsym $MOD+h focus left
bindsym $MOD+j focus down
bindsym $MOD+k focus up
bindsym $MOD+l focus right

# alternatively, you can use the cursor keys:
bindsym $MOD+Left focus left
bindsym $MOD+Down focus down
bindsym $MOD+Up focus up
bindsym $MOD+Right focus right

# move focused window
bindsym $MOD+Shift+h move left
bindsym $MOD+Shift+j move down
bindsym $MOD+Shift+k move up
bindsym $MOD+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $MOD+Shift+Left move left
bindsym $MOD+Shift+Down move down
bindsym $MOD+Shift+Up move up
bindsym $MOD+Shift+Right move right

# split in horizontal orientation
bindsym $MOD+g split h

# split in vertical orientation
bindsym $MOD+v split v

# enter fullscreen mode for the focused container
bindsym $MOD+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $MOD+s layout stacking
bindsym $MOD+z layout tabbed
bindsym $MOD+e layout toggle split

# toggle tiling / floating
bindsym $MOD+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $MOD+space focus mode_toggle

# focus the parent container
bindsym $MOD+q focus parent

# focus the child container
#bindsym $MOD+d focus child

# switch to workspace
bindsym $MOD+ampersand  workspace 1
bindsym $MOD+eacute     workspace 2
bindsym $MOD+quotedbl   workspace 3
bindsym $MOD+apostrophe workspace 4
bindsym $MOD+parenleft  workspace 5
bindsym $MOD+minus      workspace 6
bindsym $MOD+egrave     workspace 7
bindsym $MOD+underscore workspace 8
bindsym $MOD+ccedilla   workspace 9
bindsym $MOD+agrave     workspace 10

# move focused container to workspace
bindsym $MOD+Shift+ampersand move container to workspace 1
bindsym $MOD+Shift+eacute move container to workspace 2
bindsym $MOD+Shift+quotedbl move container to workspace 3
bindsym $MOD+Shift+apostrophe move container to workspace 4
bindsym $MOD+Shift+5 move container to workspace 5
bindsym $MOD+Shift+minus move container to workspace 6
bindsym $MOD+Shift+egrave move container to workspace 7
bindsym $MOD+Shift+underscore move container to workspace 8
bindsym $MOD+Shift+ccedilla move container to workspace 9
bindsym $MOD+Shift+agrave move container to workspace 10

# reload the configuration file
bindsym $MOD+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $MOD+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $MOD+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $MOD+r mode "resize"

# Custom bindings to set the display
# The scripts in ~/.screenlayout are generated using arandr
# We set the text that will be displayed in the bar
set $displayMode "Set display mode [w]ork [l]aptop [h]ome"
# Keystroke to show the message and enter in the $displayMode
bindsym $MOD+x mode $displayMode
# When display mode is active, do the following on key press:
mode $displayMode {
    bindsym w exec ~/.screenlayout/work-remote.sh; \
                mode "default"
    bindsym h exec ~/.screenlayout/home-display.sh; \
                mode "default"
    bindsym l exec ~/.screenlayout/laptop-display.sh; \
                mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Register the lock script in a variable so we avoid repetition.
set $lock lock && sleep 1
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $lock, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $lock && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $lock && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Pause mode "$mode_system"

new_window pixel 3

# Works only with i3-gaps
gaps inner 10
gaps outer 0

# MOUSE
focus_follows_mouse no

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources for some reason.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text    indicator child_border
client.focused          $fg     $fg     $bg     $fg       $fg
client.focused_inactive $bg     $bg     $fg     $bg       $bg
client.unfocused        $bg     $bg     $fg     $bg       $bg
client.urgent           $bg     $bg     $fg     $bg       $bg
client.placeholder      $bg     $bg     $fg     $bg       $bg

exec --no-startup-id "wal -i $HOME/Pictures/Wall -t"

bar {
  i3bar_command i3bar
}

# Execute my main screenlayout, generated using the arandr software
exec --no-startup-id "$HOME/.screenlayout/main.sh"

# vim:filetype=i3

