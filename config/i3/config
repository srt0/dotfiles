# i3 config file
# Yoann Fleury
# Any question about this configuration file ? Ask me to @yoannfleurydev on
# Twitter and I will answer with pleasure.

# -----------------------------------
# VARIABLES
# -----------------------------------

# Set the SUPER key to be the modifier key. (Mod1=<Alt>, Mod4=<Super>)
set $ALT Mod1
set $MOD Mod4

# Here, I set another variable for i3wm to avoid writing $HOME/bin multiple
# times, so if it change, I just have to change it here.
set $HOME_BIN $HOME/bin

# -----------------------------------
# BORDER STYLE
# -----------------------------------

# Configure border style for new window and new float window
new_window pixel 1
new_float normal
hide_edge_borders none

# Use Mouse+$MOD to drag floating windows to their wanted position
floating_modifier $MOD

# -----------------------------------
# CUSTOM KEY MAPPING SECTION
# -----------------------------------

# Use modifier key and enter to open terminal. i3-sensible-terminal is a
# wrapper, if you set the $TERMINAL environment variable, it will open
# the defined terminal.
bindsym $MOD+Return exec i3-sensible-terminal

# ROFI, with show run and show window
bindsym $MOD+d exec rofi -show run
bindsym $MOD+w exec rofi -show window

# morc_menu is a simple menu, useful to search for software by categories
bindsym $MOD+m exec --no-startup-id morc_menu

# Kill the focused window
bindsym $MOD+Shift+a kill

# Use modifier key and Control and left or right to move the workspace on the
# left or the right screen output if there is at least two output
bindsym $MOD+Ctrl+Left exec "i3-msg move workspace to output left"
bindsym $MOD+Ctrl+Right exec "i3-msg move workspace to output right"
bindsym $MOD+Ctrl+Up exec "i3-msg move workspace to output up"
bindsym $MOD+Ctrl+Down exec "i3-msg move workspace to output down"

# -----------------------------------
# SOUND KEY MAPPING
# -----------------------------------
exec --no-startup-id volumeicon
bindsym $ALT+j exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym $ALT+k exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym $ALT+h exec playerctl previous
bindsym $ALT+l exec playerctl next
bindsym $ALT+space exec playerctl play
bindsym $ALT+m exec i3-sensible-terminal -e "alsamixer"

bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
# / SOUND KEY MAPPING



# Lock the screen using a custom script that take a screenshot of the current
# display and then pixelise it to hide sensitive data. Check the script for
# more information
bindsym $MOD+Shift+g exec $HOME_BIN/lock

# change focus
bindsym $MOD+h focus left
bindsym $MOD+j focus down
bindsym $MOD+k focus up
bindsym $MOD+l focus right

# alternatively, you can use the cursor keys:
bindsym $MOD+Left focus left
bindsym $MOD+Down focus down
bindsym $MOD+Up focus up
bindsym $MOD+Right focus right

# move focused window
bindsym $MOD+Shift+h move left
bindsym $MOD+Shift+j move down
bindsym $MOD+Shift+k move up
bindsym $MOD+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $MOD+Shift+Left move left
bindsym $MOD+Shift+Down move down
bindsym $MOD+Shift+Up move up
bindsym $MOD+Shift+Right move right

# Split
bindsym $MOD+g split h
bindsym $MOD+v split v

# enter fullscreen mode for the focused container
bindsym $MOD+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $MOD+s layout stacking
bindsym $MOD+z layout tabbed
bindsym $MOD+e layout toggle split

# toggle tiling / floating
bindsym $MOD+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $MOD+space focus mode_toggle

# focus the parent container
bindsym $MOD+q focus parent

# focus the child container
#bindsym $MOD+d focus child

# switch to workspace
bindsym $MOD+ampersand  workspace 1
bindsym $MOD+eacute     workspace 2
bindsym $MOD+quotedbl   workspace 3
bindsym $MOD+apostrophe workspace 4
bindsym $MOD+parenleft  workspace 5
bindsym $MOD+minus      workspace 6
bindsym $MOD+egrave     workspace 7
bindsym $MOD+underscore workspace 8
bindsym $MOD+ccedilla   workspace 9
bindsym $MOD+agrave     workspace 10

# move focused container to workspace
bindsym $MOD+Shift+ampersand move container to workspace 1
bindsym $MOD+Shift+eacute move container to workspace 2
bindsym $MOD+Shift+quotedbl move container to workspace 3
bindsym $MOD+Shift+apostrophe move container to workspace 4
bindsym $MOD+Shift+5 move container to workspace 5
bindsym $MOD+Shift+minus move container to workspace 6
bindsym $MOD+Shift+egrave move container to workspace 7
bindsym $MOD+Shift+underscore move container to workspace 8
bindsym $MOD+Shift+ccedilla move container to workspace 9
bindsym $MOD+Shift+agrave move container to workspace 10

# reload the configuration file
bindsym $MOD+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $MOD+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $MOD+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $MOD+r mode "resize"

# Custom bindings to set the display
# The scripts in ~/.screenlayout are generated using arandr
# We set the text that will be displayed in the bar
set $displayMode "Set display mode [w]ork [l]aptop [h]ome"
# Keystroke to show the message and enter in the $displayMode
bindsym $MOD+x mode $displayMode
# When display mode is active, do the following on key press:
mode $displayMode {
    bindsym w exec ~/.screenlayout/work-remote.sh; \
                mode "default"
    bindsym h exec ~/.screenlayout/home-display.sh; \
                mode "default"
    bindsym l exec ~/.screenlayout/laptop-display.sh; \
                mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Register the lock script in a variable so we avoid repetition.
set $lock $HOME_BIN/lock && sleep 1
# Here, I use bindings as a prompt to control the system
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $lock, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $lock && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $lock && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $MOD+Pause mode "$mode_system"


# MOUSE
focus_follows_mouse no

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources for some reason.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text    indicator child_border
client.focused          $bg     $bg     $fg     $bg       $bg
client.focused_inactive $bg     $bg     $fg     $bg       $bg
client.unfocused        $bg     $bg     $fg     $bg       $bg
client.urgent           $bg     $bg     $fg     $bg       $bg
client.placeholder      $bg     $bg     $fg     $bg       $bg
client.background       $bg

# -----------------------------------
# BAR SECTION
# -----------------------------------

bar {
  i3bar_command i3bar
  status_command i3status
  position bottom
  strip_workspace_numbers yes

  # Disable the left click on workspace, but the click on the bar will laucnh
  # morc_menu
  bindsym button1 nop
  bindsym --release button1 exec --no-startup-id morc_menu
  # Disable the scroll (4:up, 5:down) to change workspace
  bindsym button4 nop
  bindsym button5 nop

  colors {
    background #1D1F28
    statusline #FDFDFD
    separator  #C574DD

    # Customization of the bar colors
    #                 #BORDER #BACKGR #TEXTTT
    focused_workspace #FDFDFD #C574DD #282A36
    binding_mode      #FDFDFD #F37F97 #FDFDFD
    urgent_workspace  #FDFDFD #F37F97 #282A36
  }
}

# Key mapping to hide and reveal i3status bar
bindsym $MOD+Shift+m bar mode toggle

# Execute my main screenlayout, generated using the arandr software
exec --no-startup-id "$HOME/.screenlayout/main.sh"

# -----------------------------------
# I3WM-GAPS SPECIFIC SETTINGS
# -----------------------------------
gaps inner 16
gaps outer -2

# Smart Gaps (gaps used if only more than one container on the workspace)
smart_gaps on
# Smart Borders (draw borders around container only if it is not the only
# container on this workspace). on|no_gaps (on=always activate and no_gaps=only
# activate if the gap sizee to the edge of the screen is 0)
smart_borders on

# vim:filetype=i3

